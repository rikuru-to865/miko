# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, tasuren
# This file is distributed under the same license as the miko package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: miko # miko by tasuren\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2022-01-18 21:47+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../quickstart.md:1
msgid "Quick Start"
msgstr "クイックスタート"

#: ../../quickstart.md:2
msgid "Template Manager"
msgstr "テンプレートマネージャー"

#: ../../quickstart.md:3
msgid ""
"You can use the `Manager` class to prepare templates easily, and render "
"them easily.   So, when you use it in the backend of a web service, you "
"should define the `Manager` class first."
msgstr ""
"あなたは`Manager`クラスを使うことでテンプレートを色々と便利にレンダリングしたりすることができます。  "
"そのためウェブサービス等を開発する際はまず最初に`Manager`クラスのインスタンスを作成しましょう。"

#: ../../quickstart.md:11
msgid "Syntax"
msgstr "構文"

#: ../../quickstart.md:12
msgid ""
"In miko, the part of a template enclosed in a two-lettered hat caret is a"
" function and is executed in Python.   This enclosed area is called a "
"block in miko.   The block is replaced by the value returned by the "
"block.   In addition, the last line of the block is automatically "
"replaced by `return` even if you don't write `return`.   If you don't "
"know, it is faster to look at an example."
msgstr ""
"mikoでは二文字のハットキャレット(`^^`)で囲まれた部分をPythonの関数にしてその関数を実行します。  "
"そしてそのブロックが返した値にブロックの部分は置き換えられます。  "
"ちなみにブロック内のコードで`if`などを挟んでいない状態の最後の行には`return`を置かなくても自動で`return`が配置されます。よくわからないかもしれません。そしたら例をみてみましょう！"

#: ../../quickstart.md:17
msgid "Example"
msgstr "例"

#: ../../quickstart.md:18 ../../quickstart.md:34
msgid "html"
msgstr ""

#: ../../quickstart.md:24 ../../quickstart.md:40
msgid "python"
msgstr ""

#: ../../quickstart.md:28
msgid "Result html"
msgstr "htmlのレンダリング結果"

#: ../../quickstart.md:33
msgid "Of course, you can also do the following:"
msgstr "もちろん、あなたは以下のようなこともできますよ！"

#: ../../quickstart.md:45
msgid "Builtins"
msgstr "ビルトイン"

#: ../../quickstart.md:46
msgid ""
"A built-in is a variable that can be used from the beginning in a "
"template block.   There are functions and so on."
msgstr "ビルトインは最初からテンプレートのブロック内で使える変数です。関数もあります。"

#: ../../quickstart.md:48
msgid "`Template` class instance: `self`"
msgstr "`Template`クラスのインスタンス：`self`"

#: ../../quickstart.md:49
msgid "Insert another file: `include` (`miko.builtins.include`)"
msgstr "他のファイルの挿入：`include` (`miko.builtins.include`)"

#: ../../quickstart.md:51
msgid "Truncate text: `truncate` (`miko.builtins.truncate`)"
msgstr "文字列の切り捨て：`truncate` (`miko.builtins.truncate`)"

#: ../../quickstart.md:53
msgid "Escape text: `escape` (`html.escape`)"
msgstr "文字列をエスケープ：`escape` (`html.escape`)"

#: ../../quickstart.md:54
msgid ""
"A constant containing a two-letter cat-halet string: `CS` "
"(`miko.builtins.CS`)"
msgstr "二文字のハットキャレットが入った定数：`CS`(`miko.builtins.CS`)"

#: ../../quickstart.md:56
msgid ""
"`Manager` class instance: `manager` (If you used the Manager class for "
"rendering.)"
msgstr "`Manager`クラスのインスタンス：`manager` (もしレンダリングに`Manager`クラスを使っているなら)"

#: ../../quickstart.md:58
msgid ""
"miko is still waiting for a PullRequest in the GitHub repository as there"
" are not many yet."
msgstr "まだビルトインは少ないです...  mikoはPullRequestをお待ちしております！"

#: ../../quickstart.md:60
msgid "Inheriting Templates"
msgstr "テンプレートの継承"

#: ../../quickstart.md:61
msgid ""
"In miko, you can inherit templates by using the attribute `render` of the"
" instance of the `Manager` class that is automatically passed to the "
"block.   (Or you can use the extends attribute of an instance of the "
"Template class.)"
msgstr ""
"mikoでは`Manager`クラスのメソッド`render`を使うことでテンプレートの継承をすることができます。  "
"(それか`Template`クラスのメソッド`extends`を使うことでもできます。)"

#: ../../quickstart.md:63 ../../quickstart.md:93
msgid "Examples"
msgstr "例"

#: ../../quickstart.md:64
msgid "base.html"
msgstr ""

#: ../../quickstart.md:77
msgid "page1.html"
msgstr ""

#: ../../quickstart.md:91
msgid "Make alias for Inheriting Templates"
msgstr "テンプレートの継承のエイリアスの作成"

#: ../../quickstart.md:92
msgid ""
"By using the extends argument and attributes of the ``Manager`` class, it"
" is possible to create an alias for ``manager.render`` that inherits from"
" the template."
msgstr "``Manager`` クラスの引数そして属性である ``extends`` を使うことで ``manager.render`` のエイリアスなるものを作ることが可能です。"

#: ../../quickstart.md:94
msgid "Python"
msgstr ""

#: ../../quickstart.md:103
msgid "HTML"
msgstr ""

#: ../../quickstart.md:116
msgid "Escape"
msgstr "エスケープ"

#: ../../quickstart.md:117
msgid ""
"If you place the user name and description fields in the template, it is "
"better to escape them to prevent XSS injection.   If you are going to do "
"that escaping, you should do the following:"
msgstr ""
"もしユーザー名やユーザープロフィールなどをテンプレートに入れる場合はXSSインジェクション対策でエスケープをした方が良いです。  "
"それは以下のようにすることでできます。"

#: ../../quickstart.md:124
msgid ""
"Yes, you can use the built-in `escape` function.   The `escape` function "
"is a function of `html`, the Python standard library."
msgstr ""
"Yeah, あなたはビルトインの`escape`関数を使うことでエスケープができます。  "
"(この関数はPython標準のライブラリの`html`にある関数です。)"

#: ../../quickstart.md:126
msgid "Notes"
msgstr "備考"

#: ../../quickstart.md:127
msgid ""
"If you want to automate this escaping, you can use the `adjustors` "
"argument of the constructor of the `Template` class.   (If you are using "
"`Manager`, pass it to `Manager`.)"
msgstr ""
"もしこのエスケープを自動でやって欲しいのなら`Template`クラスの引数`adjustors`を使えば良さそうです。  "
"(もし`Manager`クラスを使っているのなら`Manager`クラスにその引数の値を渡しましょう。)"

#: ../../quickstart.md:130
msgid "Share variables with other blocks"
msgstr "他のブロックに変数を共有する"

#: ../../quickstart.md:131
msgid ""
"The template class :class:`miko.template.Template`, an instance of "
"``self``, is available in templates.   By adding a new attribute to this "
"``self``, you can carry the value over to another block in the template."
msgstr ""
"テンプレートクラスの :class:`miko.template.Template` のインスタンスが入る ``self`` "
"はテンプレート内で使えます。  この ``self`` に新しい属性を追加して値を設定することで他のブロックに値を持ち越すことができます。"

#: ../../quickstart.md:141
msgid "Asynchronous Support"
msgstr "非同期のサポート"

#: ../../quickstart.md:142
msgid ""
"miko has good asynchronous support.   There is an ``aiorender`` method, "
"so use it.   You can also use ``await`` in templates that render "
"asynchronously to allow other asynchronous functions to be rendered "
"asynchronously."
msgstr ""
"mikoはしっかり非同期にも対応しています。  mikoのテンプレートクラスやそのテンプレートを管理するためのクラスである ``Manager``"
" には、レンダリング関数である ``render`` の非同期版である ``aiorender`` があります。  "
"そして、これを使って非同期でレンダリングした場合は、レンダリングするテンプレート内で ``await`` "
"を使って他の非同期関数を実行することができます。"

#: ../../quickstart.md:152
msgid "About the name miko"
msgstr "mikoの名前について"

#: ../../quickstart.md:153
msgid ""
"That it is not pronounced \"maiko\".   A miko (巫女 - sibyl) is a woman who"
" serves the Japanese gods and is found in jinja (神社 - shrines).   I named"
" it miko to make it look like another template engine choice for jinja, "
"Python's famous template engine.   If you want to see what a shrine "
"maiden looks like, search for `巫女`.   (If you're an anime fan, you may "
"know this.)"
msgstr ""
"この名前の元は「巫女」です。  "
"なぜ巫女にしたかというとPythonの界隈で有名なテンプレートエンジンであるjinjaの神社にいるからで、jinjaではないもう一つのテンプレートエンジンの選択肢ということでつけた名前です。"

